JobHeader="GridEngine"
SgeCell="mel.cmc.ec.gc.ca"
TrapArch="LINUX"
SharedExclusive=${share:-s}
waste=${waste:-75}
MachPrefix="Linux_"
JobClass="shared"
UseHT=",res_ht=false"

if [[ "${memunits}" == "M" ]] ; then
  ((cm<32)) && ((cm=32))
else
  ((cm<32000)) && ((cm=32000))
fi

ImmediateMem=127  # memory allowed for "immediate" submit
CpusPerNode=8
MemoryPerCpu=6000
((MaxNodeMemory=MemoryPerCpu*CpusPerNode))

ParallelEnvironment="test2"
JobClass=""

OMP_NUM_THREADS=${OMP_NUM_THREADS:-1}
((MinCpusPerNode=OMP_NUM_THREADS))
((NeededSlots=TotalCpus/OMP_NUM_THREADS))

((MaxMemoryReq=OMP_NUM_THREADS*MemoryPerCpu))
((MaxMemoryNeed=${cm:-0}${MemMultiplier}/1000))
((MaxMemoryNeed>MaxNodeMemory)) && \
  FatalError "requesting too much memory (${MaxMemoryNeed}MB) maximum possible is ${MaxNodeMemory}MB"

((SlotSize=OMP_NUM_THREADS))
((MaxMemoryNeed > MaxMemoryReq)) && ((SlotSize=(MaxMemoryNeed+MemoryPerCpu-1)/MemoryPerCpu)) && \
  echo WARNING: augmenting slot size from $OMP_NUM_THREADS to $SlotSize because of large memory request
((SlotsPerNode=CpusPerNode/SlotSize))
((SlotSize=CpusPerNode/SlotsPerNode))
((MinCpusPerNode=SlotSize))
#((TotalCpus=NeededSlots*SlotSize))
((CpusReallyNeeded=NeededSlots*SlotSize))

if [[ "${CpusReallyNeeded}" -gt 1 ]]
then
  mpi="mpi"
  [[ ${SharedExclusive} == e && CpusReallyNeeded -gt 4 ]] && MinCpusPerNode=${CpusPerNode} && echo "INFO: node(s) will not be shared for this job"
  ((NeededSlots=(CpusReallyNeeded+MinCpusPerNode-1)/MinCpusPerNode))
  ((CpusReallyNeeded=NeededSlots*MinCpusPerNode))
  ((MaxMemoryNeed=MaxMemoryNeed*(MinCpusPerNode/SlotSize)))
  ((cm=cm*(MinCpusPerNode/SlotSize)))
  test "${v}" != "" && echo INFO: there are $SlotsPerNode slots of size $SlotSize per node, CpusReallyNeeded=$CpusReallyNeeded
#  test "${v}" != "" && echo ParallelEnvironment=${ParallelEnvironment} CpusPerNode=${CpusPerNode}
fi
if [[ "${CpusReallyNeeded}" -eq 1 ]] ; then
  [[ $t -le 200 && ${cm}${MemMultiplier} -lt 2000000 ]] && UseHT=""
  [[ "$queue" == @* ]]  && JobClass="${queue#@}"  && ParallelEnvironment=""
  [[ "$queue" == fexfer* ]] && JobClass="xxfer" && ParallelEnvironment=""
  [[ "$queue" == xfer* ]] && JobClass="xfer" && ParallelEnvironment=""
fi
#sge_extra5="-l res_cpus=${MinCpusPerNode},res_mem=${MaxMemoryNeed}$UseHT"
sge_extra5="-l res_cpus=${MinCpusPerNode},res_mem=${MaxMemoryNeed},res_wallclock=${t},h_vmem=${cm}${memunits}"
echo "JOB profile: slots=$NeededSlots, Memory per slot=${MaxMemoryNeed}(${cm}${memunits}), cpus per slot=${MinCpusPerNode} $UseHT"
